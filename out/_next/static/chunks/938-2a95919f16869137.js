"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[938],{2938:function(e,n,t){t.d(n,{S:function(){return p}});var i=t(7392);let l=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function u(e){return a[e.charCodeAt(0)]}let a=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];var r=t(7826),o=t(7820),v=t(2380),f=t(7359);let c=Object.freeze({});function p(e){return function(e,n,t=v.h8){let i,l,u;let a=new Map;for(let e of Object.values(f.h))a.set(e,function(e,n){let t=e[n];return"object"==typeof t?t:"function"==typeof t?{enter:t,leave:void 0}:{enter:e.enter,leave:e.leave}}(n,e));let p=Array.isArray(e),s=[e],d=-1,m=[],y=e,D=[],g=[];do{var h,x,b;let e;d++;let f=d===s.length,E=f&&0!==m.length;if(f){if(l=0===g.length?void 0:D[D.length-1],y=u,u=g.pop(),E){if(p){y=y.slice();let e=0;for(let[n,t]of m){let i=n-e;null===t?(y.splice(i,1),e++):y[i]=t}}else for(let[e,n]of(y=Object.defineProperties({},Object.getOwnPropertyDescriptors(y)),m))y[e]=n}d=i.index,s=i.keys,m=i.edits,p=i.inArray,i=i.prev}else if(u){if(null==(y=u[l=p?d:s[d]]))continue;D.push(l)}if(!Array.isArray(y)){(0,v.UG)(y)||(0,r.a)(!1,`Invalid AST Node: ${(0,o.X)(y)}.`);let t=f?null===(h=a.get(y.kind))||void 0===h?void 0:h.leave:null===(x=a.get(y.kind))||void 0===x?void 0:x.enter;if((e=null==t?void 0:t.call(n,y,l,u,D,g))===c)break;if(!1===e){if(!f){D.pop();continue}}else if(void 0!==e&&(m.push([l,e]),!f)){if((0,v.UG)(e))y=e;else{D.pop();continue}}}void 0===e&&E&&m.push([l,y]),f?D.pop():(i={inArray:p,index:d,keys:s,edits:m,prev:i},s=(p=Array.isArray(y))?y:null!==(b=t[y.kind])&&void 0!==b?b:[],d=-1,m=[],u&&g.push(u),u=y)}while(void 0!==i);return 0!==m.length?m[m.length-1][1]:e}(e,s)}let s={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>d(e.definitions,"\n\n")},OperationDefinition:{leave(e){let n=y("(",d(e.variableDefinitions,", "),")"),t=d([e.operation,d([e.name,n]),d(e.directives," ")]," ");return("query"===t?"":t+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:n,defaultValue:t,directives:i})=>e+": "+n+y(" = ",t)+y(" ",d(i," "))},SelectionSet:{leave:({selections:e})=>m(e)},Field:{leave({alias:e,name:n,arguments:t,directives:i,selectionSet:l}){let u=y("",e,": ")+n,a=u+y("(",d(t,", "),")");return a.length>80&&(a=u+y("(\n",D(d(t,"\n")),"\n)")),d([a,d(i," "),l]," ")}},Argument:{leave:({name:e,value:n})=>e+": "+n},FragmentSpread:{leave:({name:e,directives:n})=>"..."+e+y(" ",d(n," "))},InlineFragment:{leave:({typeCondition:e,directives:n,selectionSet:t})=>d(["...",y("on ",e),d(n," "),t]," ")},FragmentDefinition:{leave:({name:e,typeCondition:n,variableDefinitions:t,directives:i,selectionSet:l})=>`fragment ${e}${y("(",d(t,", "),")")} on ${n} ${y("",d(i," ")," ")}`+l},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:n})=>n?(0,i.LZ)(e):`"${e.replace(l,u)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+d(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+d(e,", ")+"}"},ObjectField:{leave:({name:e,value:n})=>e+": "+n},Directive:{leave:({name:e,arguments:n})=>"@"+e+y("(",d(n,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:n,operationTypes:t})=>y("",e,"\n")+d(["schema",d(n," "),m(t)]," ")},OperationTypeDefinition:{leave:({operation:e,type:n})=>e+": "+n},ScalarTypeDefinition:{leave:({description:e,name:n,directives:t})=>y("",e,"\n")+d(["scalar",n,d(t," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:i,fields:l})=>y("",e,"\n")+d(["type",n,y("implements ",d(t," & ")),d(i," "),m(l)]," ")},FieldDefinition:{leave:({description:e,name:n,arguments:t,type:i,directives:l})=>y("",e,"\n")+n+(g(t)?y("(\n",D(d(t,"\n")),"\n)"):y("(",d(t,", "),")"))+": "+i+y(" ",d(l," "))},InputValueDefinition:{leave:({description:e,name:n,type:t,defaultValue:i,directives:l})=>y("",e,"\n")+d([n+": "+t,y("= ",i),d(l," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:n,interfaces:t,directives:i,fields:l})=>y("",e,"\n")+d(["interface",n,y("implements ",d(t," & ")),d(i," "),m(l)]," ")},UnionTypeDefinition:{leave:({description:e,name:n,directives:t,types:i})=>y("",e,"\n")+d(["union",n,d(t," "),y("= ",d(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:n,directives:t,values:i})=>y("",e,"\n")+d(["enum",n,d(t," "),m(i)]," ")},EnumValueDefinition:{leave:({description:e,name:n,directives:t})=>y("",e,"\n")+d([n,d(t," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:n,directives:t,fields:i})=>y("",e,"\n")+d(["input",n,d(t," "),m(i)]," ")},DirectiveDefinition:{leave:({description:e,name:n,arguments:t,repeatable:i,locations:l})=>y("",e,"\n")+"directive @"+n+(g(t)?y("(\n",D(d(t,"\n")),"\n)"):y("(",d(t,", "),")"))+(i?" repeatable":"")+" on "+d(l," | ")},SchemaExtension:{leave:({directives:e,operationTypes:n})=>d(["extend schema",d(e," "),m(n)]," ")},ScalarTypeExtension:{leave:({name:e,directives:n})=>d(["extend scalar",e,d(n," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:i})=>d(["extend type",e,y("implements ",d(n," & ")),d(t," "),m(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:n,directives:t,fields:i})=>d(["extend interface",e,y("implements ",d(n," & ")),d(t," "),m(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:n,types:t})=>d(["extend union",e,d(n," "),y("= ",d(t," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:n,values:t})=>d(["extend enum",e,d(n," "),m(t)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:n,fields:t})=>d(["extend input",e,d(n," "),m(t)]," ")}};function d(e,n=""){var t;return null!==(t=null==e?void 0:e.filter(e=>e).join(n))&&void 0!==t?t:""}function m(e){return y("{\n",D(d(e,"\n")),"\n}")}function y(e,n,t=""){return null!=n&&""!==n?e+n+t:""}function D(e){return y("  ",e.replace(/\n/g,"\n  "))}function g(e){var n;return null!==(n=null==e?void 0:e.some(e=>e.includes("\n")))&&void 0!==n&&n}}}]);